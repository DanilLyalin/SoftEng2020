/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-10-16 13:29:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class game_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background: whitesmoke;\">\r\n");
      out.write("    <div class=\"gameWind\" style=\"width: 100%;\r\n");
      out.write("                                 height: 100%;\r\n");
      out.write("                                 position: absolute;\r\n");
      out.write("                                 top: 0;\r\n");
      out.write("                                 left: 0;\r\n");
      out.write("                                 overflow: auto;\r\n");
      out.write("                                 white-space: nowrap;\r\n");
      out.write("                                 text-align: center;\r\n");
      out.write("                                 font-size: 0;\">\r\n");
      out.write("        <canvas height=\"640\" width=\"320\" id=\"Left\"></canvas>\r\n");
      out.write("        <canvas height=\"700\" width=\"320\" id=\"GameWindow\" style=\"margin-top: 1.5%;\" ></canvas>\r\n");
      out.write("        <canvas height=\"700\" width=\"320\" id=\"LeaderBoard\"style=\"margin-top: 1.5%; margin-left: 2px;\"></canvas>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        var GW = document.getElementById('GameWindow');\r\n");
      out.write("        var context = GW.getContext('2d');\r\n");
      out.write("        var LB = document.getElementById('LeaderBoard');\r\n");
      out.write("        var LBcontext = LB.getContext('2d');\r\n");
      out.write("        const pixelSize = 32;\r\n");
      out.write("        const heightInPixel = 24;\r\n");
      out.write("        const widthInPixel = 12;\r\n");
      out.write("        var arrayOfPixels = [];\r\n");
      out.write("        for(let i = 0; i < heightInPixel; i++)\r\n");
      out.write("        {\r\n");
      out.write("            arrayOfPixels[i] = [];\r\n");
      out.write("            for(let j = 0; j < widthInPixel; j++){\r\n");
      out.write("                if(j == 0 || j == 11){\r\n");
      out.write("                    arrayOfPixels[i][j] = 1;\r\n");
      out.write("                }\r\n");
      out.write("                else{\r\n");
      out.write("                    arrayOfPixels[i][j] = 0;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        var playing = true;\r\n");
      out.write("        var figurePos = [[0,0],[0,0],[0,0],[0,0]];\r\n");
      out.write("        var savePos = [[0,0],[0,0],[0,0],[0,0]];\r\n");
      out.write("        var move = true;\r\n");
      out.write("        var fps = 0;\r\n");
      out.write("        var figure = [0,0];\r\n");
      out.write("        var score = 0;\r\n");
      out.write("        var gameSpeed = 100;\r\n");
      out.write("\r\n");
      out.write("        function leaderBoard(){\r\n");
      out.write("            LBcontext.fillStyle = 'black';\r\n");
      out.write("            LBcontext.fillRect(0, 0, LB.width, LB.height);\r\n");
      out.write("            LBcontext.fillStyle = 'white';\r\n");
      out.write("            LBcontext.globalAlpha = 1;\r\n");
      out.write("            LBcontext.strokeStyle = 'black';\r\n");
      out.write("            LBcontext.fillRect(0, 0, LB.width, 60);\r\n");
      out.write("            LBcontext.strokeRect(0, 0, LB.width, 60);\r\n");
      out.write("            LBcontext.strokeRect(2, 2, LB.width-3, 58);\r\n");
      out.write("            LBcontext.globalAlpha = 1;\r\n");
      out.write("            LBcontext.fillStyle = 'black';\r\n");
      out.write("            LBcontext.font = '36px monospace';\r\n");
      out.write("            LBcontext.textAlign = 'center';\r\n");
      out.write("            LBcontext.textBaseline = 'middle';\r\n");
      out.write("            LBcontext.fillText('Leaderboard', LB.width / 2, 30);\r\n");
      out.write("            /*TO DO*/\r\n");
      out.write("            //Ð¤ÑÐ½ÐºÑÐ¸Ñ Ð´Ð»Ñ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð¸Ñ ÑÐ¿Ð¸ÑÐºÐ° Ð»Ð¸Ð´ÐµÑÐ¾Ð²\r\n");
      out.write("            LBcontext.fillStyle = 'white';\r\n");
      out.write("            LBcontext.font = '30px monospace';\r\n");
      out.write("            LBcontext.fillText('BAndosi: 9999', LB.width / 2, 80);\r\n");
      out.write("            LBcontext.fillText('SuperVan: 1337', LB.width / 2, 120);\r\n");
      out.write("            LBcontext.fillText('Your ad: 420', LB.width / 2, 160);\r\n");
      out.write("            LBcontext.fillText('Funny name: 69', LB.width / 2, 200);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function drawGame(){\r\n");
      out.write("            context.fillStyle = 'black';\r\n");
      out.write("            context.fillRect(0, 0, GW.width, GW.height);\r\n");
      out.write("            context.fillStyle = 'yellow';\r\n");
      out.write("            for(let y = 0; y < heightInPixel; y++){\r\n");
      out.write("                for(let x = 0; x < widthInPixel; x++){\r\n");
      out.write("                    if(arrayOfPixels[y][x] == 1)\r\n");
      out.write("                    context.fillRect((x-1)*pixelSize, (y-2)*pixelSize, pixelSize, pixelSize);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            context.fillStyle = 'red';\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                    context.fillRect((figurePos[i][1]-1)*pixelSize, (figurePos[i][0]-2)*pixelSize, pixelSize, pixelSize);\r\n");
      out.write("            }\r\n");
      out.write("            context.strokeStyle = 'gray';\r\n");
      out.write("            for(let y = 0; y < heightInPixel-2; y++){\r\n");
      out.write("                for(let x = 0; x < widthInPixel; x++){\r\n");
      out.write("                    context.strokeRect(x*pixelSize, y*pixelSize, pixelSize, pixelSize);\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            context.fillStyle = 'white';\r\n");
      out.write("            context.globalAlpha = 1;\r\n");
      out.write("            context.fillRect(0, GW.height-60, GW.width, 60);\r\n");
      out.write("            // Ð¿Ð¸ÑÐµÐ¼ Ð½Ð°Ð´Ð¿Ð¸ÑÑ Ð±ÐµÐ»ÑÐ¼ Ð¼Ð¾Ð½Ð¾ÑÐ¸ÑÐ¸Ð½Ð½ÑÐ¼ ÑÑÐ¸ÑÑÐ¾Ð¼ Ð¿Ð¾ ÑÐµÐ½ÑÑÑ\r\n");
      out.write("            context.globalAlpha = 1;\r\n");
      out.write("            context.fillStyle = 'black';\r\n");
      out.write("            context.font = '36px monospace';\r\n");
      out.write("            context.textAlign = 'center';\r\n");
      out.write("            context.textBaseline = 'middle';\r\n");
      out.write("            context.fillText('User score: '+ score, GW.width / 2, GW.height-30);\r\n");
      out.write("            context.strokeStyle = 'black';\r\n");
      out.write("            context.strokeRect(0, GW.height-60, GW.width, 60);\r\n");
      out.write("            context.strokeRect(2, GW.height-58, GW.width-3, 58);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function putInArray(fig){\r\n");
      out.write("            switch(fig){\r\n");
      out.write("                case(1): //O\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    arrayOfPixels[0][6] = 2;\r\n");
      out.write("                    arrayOfPixels[1][5] = 2;\r\n");
      out.write("                    arrayOfPixels[1][6] = 2;\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 1;\r\n");
      out.write("                    figurePos[2][0] = 2;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 5;\r\n");
      out.write("                    figurePos[1][1] = 6;\r\n");
      out.write("                    figurePos[2][1] = 5;\r\n");
      out.write("                    figurePos[3][1] = 6;\r\n");
      out.write("                    break;\r\n");
      out.write("                case(2): // |\r\n");
      out.write("                    arrayOfPixels[1][4] = 2;\r\n");
      out.write("                    arrayOfPixels[1][5] = 2;\r\n");
      out.write("                    arrayOfPixels[1][6] = 2;\r\n");
      out.write("                    arrayOfPixels[1][7] = 2;\r\n");
      out.write("                    for(let i = 0; i < 4; i++){\r\n");
      out.write("                        figurePos[i][0] = 2;\r\n");
      out.write("                    }\r\n");
      out.write("                    figurePos[0][1] = 4;\r\n");
      out.write("                    figurePos[1][1] = 5;\r\n");
      out.write("                    figurePos[2][1] = 6;\r\n");
      out.write("                    figurePos[3][1] = 7;\r\n");
      out.write("                    break;    \r\n");
      out.write("                case(3): // S\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    arrayOfPixels[0][6] = 2;\r\n");
      out.write("                    arrayOfPixels[1][4] = 2;\r\n");
      out.write("                    arrayOfPixels[1][5] = 2;\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 1;\r\n");
      out.write("                    figurePos[2][0] = 2;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 5;\r\n");
      out.write("                    figurePos[1][1] = 6;\r\n");
      out.write("                    figurePos[2][1] = 4;\r\n");
      out.write("                    figurePos[3][1] = 5;\r\n");
      out.write("                    break;\r\n");
      out.write("                case(4): // Z\r\n");
      out.write("                    arrayOfPixels[0][4] = 2;\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    arrayOfPixels[1][5] = 2;\r\n");
      out.write("                    arrayOfPixels[1][6] = 2;\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 1;\r\n");
      out.write("                    figurePos[2][0] = 2;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 4;\r\n");
      out.write("                    figurePos[1][1] = 5;\r\n");
      out.write("                    figurePos[2][1] = 5;\r\n");
      out.write("                    figurePos[3][1] = 6;\r\n");
      out.write("                    break;\r\n");
      out.write("                case(5): //L\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    for(i = 3; i < 6; i++){\r\n");
      out.write("                        arrayOfPixels[1][i] = 2;\r\n");
      out.write("                    }\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 2;\r\n");
      out.write("                    figurePos[2][0] = 2;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 5;\r\n");
      out.write("                    figurePos[1][1] = 3;\r\n");
      out.write("                    figurePos[2][1] = 4;\r\n");
      out.write("                    figurePos[3][1] = 5;\r\n");
      out.write("                    break;\r\n");
      out.write("                case(6): //J\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    for(i = 5; i < 8; i++){\r\n");
      out.write("                        arrayOfPixels[1][i] = 2;\r\n");
      out.write("                    }\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 2;\r\n");
      out.write("                    figurePos[2][0] = 2;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 5;\r\n");
      out.write("                    figurePos[1][1] = 5;\r\n");
      out.write("                    figurePos[2][1] = 6;\r\n");
      out.write("                    figurePos[3][1] = 7;\r\n");
      out.write("                    break; \r\n");
      out.write("                case(7): // T\r\n");
      out.write("                    arrayOfPixels[0][5] = 2;\r\n");
      out.write("                    arrayOfPixels[0][6] = 2;\r\n");
      out.write("                    arrayOfPixels[0][7] = 2;\r\n");
      out.write("                    arrayOfPixels[1][6] = 2;\r\n");
      out.write("                    figurePos[0][0] = 1;\r\n");
      out.write("                    figurePos[1][0] = 1;\r\n");
      out.write("                    figurePos[2][0] = 1;\r\n");
      out.write("                    figurePos[3][0] = 2;\r\n");
      out.write("                    figurePos[0][1] = 5;\r\n");
      out.write("                    figurePos[1][1] = 6;\r\n");
      out.write("                    figurePos[2][1] = 7;\r\n");
      out.write("                    figurePos[3][1] = 6;\r\n");
      out.write("                    break;       \r\n");
      out.write("                default: break;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function moveDown(){\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]+1][figurePos[i][1]] = 2;\r\n");
      out.write("                figurePos[i][0] +=1\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function moveLeft(){\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]-1] = 2;\r\n");
      out.write("                figurePos[i][1] -=1\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function moveRight(){\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 0;\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]+1] = 2;\r\n");
      out.write("                figurePos[i][1] +=1\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function rotateCheck(){\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                for(let j = 0; j < 4; j++){\r\n");
      out.write("                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]] == 1 || !movingCheck('down')){\r\n");
      out.write("                        for(let i = 0; i < 4; i++){\r\n");
      out.write("                            for(let j = 0; j < 4; j++){\r\n");
      out.write("                                figurePos[i][j] = savePos[i][j];\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                        return false;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function rotate(){\r\n");
      out.write("            cancelAnimationFrame(raf);\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                for(let j = 0; j < 4; j++){\r\n");
      out.write("                    savePos[i][j] = figurePos[i][j];\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            switch(figure[0]){\r\n");
      out.write("                case(1): break;\r\n");
      out.write("                case(2):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[0][0] -= 1;\r\n");
      out.write("                                figurePos[2][0] += 1;\r\n");
      out.write("                                figurePos[3][0] += 2;\r\n");
      out.write("                                figurePos[0][1] += 1;\r\n");
      out.write("                                figurePos[2][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] -= 2;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[0][0] += 1;\r\n");
      out.write("                                figurePos[2][0] -= 1;\r\n");
      out.write("                                figurePos[3][0] -= 2;\r\n");
      out.write("                                figurePos[0][1] -= 1;\r\n");
      out.write("                                figurePos[2][1] += 1;\r\n");
      out.write("                                figurePos[3][1] += 2;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }rotateCheck();\r\n");
      out.write("                                break;   \r\n");
      out.write("                        }\r\n");
      out.write("                        break;\r\n");
      out.write("                case(3):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[2][1] += 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figurePos[2][0] -= 2;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[2][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figurePos[2][0] += 2;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                            break;\r\n");
      out.write("                case(4):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figurePos[2][1] -= 1;\r\n");
      out.write("                                figurePos[3][0] -= 2;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figurePos[2][1] += 1;\r\n");
      out.write("                                figurePos[3][0] += 2;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                            break;\r\n");
      out.write("                case(5):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[0][0] += 2;\r\n");
      out.write("                                figurePos[1][0] -= 1;\r\n");
      out.write("                                figurePos[3][0] += 1;\r\n");
      out.write("                                figurePos[1][1] += 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[1][0] += 1;\r\n");
      out.write("                                figurePos[3][0] -= 1;\r\n");
      out.write("                                figurePos[0][1] -= 2;\r\n");
      out.write("                                figurePos[1][1] += 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figure[1] = 2;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(2):\r\n");
      out.write("                                figurePos[0][0] -= 2;\r\n");
      out.write("                                figurePos[1][0] += 1;\r\n");
      out.write("                                figurePos[3][0] -= 1;\r\n");
      out.write("                                figurePos[1][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figure[1] = 3;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 2;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(3):\r\n");
      out.write("                                figurePos[1][0] -= 1;\r\n");
      out.write("                                figurePos[3][0] += 1;\r\n");
      out.write("                                figurePos[0][1] += 2;\r\n");
      out.write("                                figurePos[1][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 3;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                            break;\r\n");
      out.write("                case(6):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[1][0] -= 1;\r\n");
      out.write("                                figurePos[3][0] += 1;\r\n");
      out.write("                                figurePos[0][1] += 2;\r\n");
      out.write("                                figurePos[1][1] += 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[0][0] += 2;\r\n");
      out.write("                                figurePos[1][0] += 1;\r\n");
      out.write("                                figurePos[3][0] -= 1;\r\n");
      out.write("                                figurePos[1][1] += 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figure[1] = 2;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(2):\r\n");
      out.write("                                figurePos[1][0] += 1;\r\n");
      out.write("                                figurePos[3][0] -= 1;\r\n");
      out.write("                                figurePos[0][1] -= 2;\r\n");
      out.write("                                figurePos[1][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figure[1] = 3;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 2;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(3):\r\n");
      out.write("                                figurePos[0][0] -= 2;\r\n");
      out.write("                                figurePos[1][0] -= 1;\r\n");
      out.write("                                figurePos[3][0] += 1;\r\n");
      out.write("                                figurePos[1][1] -= 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 3;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                            break;\r\n");
      out.write("                case(7):switch(figure[1]){\r\n");
      out.write("                            case(0):\r\n");
      out.write("                                figurePos[2][0] -= 1;\r\n");
      out.write("                                figurePos[2][1] -= 1;\r\n");
      out.write("                                figure[1] = 1;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 0;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(1):\r\n");
      out.write("                                figurePos[3][0] -= 1;\r\n");
      out.write("                                figurePos[3][1] += 1;\r\n");
      out.write("                                figure[1] = 2;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 1;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(2):\r\n");
      out.write("                                figurePos[0][0] += 1;\r\n");
      out.write("                                figurePos[0][1] += 1;\r\n");
      out.write("                                figure[1] = 3;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 2;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            case(3):\r\n");
      out.write("                                figurePos[0][0] -= 1;\r\n");
      out.write("                                figurePos[2][0] += 1;\r\n");
      out.write("                                figurePos[3][0] += 1;\r\n");
      out.write("                                figurePos[0][1] -= 1;\r\n");
      out.write("                                figurePos[2][1] += 1;\r\n");
      out.write("                                figurePos[3][1] -= 1;\r\n");
      out.write("                                figure[1] = 0;\r\n");
      out.write("                                if(!rotateCheck()){\r\n");
      out.write("                                    figure[1] = 3;\r\n");
      out.write("                                }\r\n");
      out.write("                                break;\r\n");
      out.write("                            }\r\n");
      out.write("                            break;\r\n");
      out.write("            }\r\n");
      out.write("            requestAnimationFrame(game);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        document.addEventListener('keydown', function(e) {\r\n");
      out.write("            // 37 â, 38 â, 39 â, 40 â;\r\n");
      out.write("            switch(e.which){\r\n");
      out.write("                case(37): if(movingCheck('left')){\r\n");
      out.write("                            moveLeft();\r\n");
      out.write("                            };\r\n");
      out.write("                          break;\r\n");
      out.write("                case(39): if(movingCheck('right')){\r\n");
      out.write("                            moveRight();\r\n");
      out.write("                          };\r\n");
      out.write("                          break;\r\n");
      out.write("                case(38): rotate();\r\n");
      out.write("                            break;\r\n");
      out.write("                case(40): if(movingCheck('down')){\r\n");
      out.write("                            moveDown();\r\n");
      out.write("                            }\r\n");
      out.write("                          break;\r\n");
      out.write("                default: break;\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function movingCheck(side){\r\n");
      out.write("            switch(side){\r\n");
      out.write("                case('left'): for(let i = 0; i < 4; i++){\r\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]-1] == 1)\r\n");
      out.write("                                    {\r\n");
      out.write("                                        return false;\r\n");
      out.write("                                    }\r\n");
      out.write("                              }\r\n");
      out.write("                              break;\r\n");
      out.write("                case('right'):for(let i = 0; i < 4; i++){\r\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]][figurePos[i][1]+1] == 1 || figurePos[i][1]+1 >= widthInPixel)\r\n");
      out.write("                                    {\r\n");
      out.write("                                        return false;\r\n");
      out.write("                                    }\r\n");
      out.write("                              }\r\n");
      out.write("                              break;\r\n");
      out.write("                case('down'): for(let i = 0; i < 4; i++){\r\n");
      out.write("                                    if(arrayOfPixels[figurePos[i][0]+1][figurePos[i][1]] == 1 || figurePos[i][0]+1 > heightInPixel-3 || figurePos[i][0]+1 < 0)\r\n");
      out.write("                                    {\r\n");
      out.write("                                        return false;\r\n");
      out.write("                                    }\r\n");
      out.write("                              }\r\n");
      out.write("                              break;\r\n");
      out.write("            }\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function saveState(){\r\n");
      out.write("            for(let i = 0; i < 4; i++){\r\n");
      out.write("                arrayOfPixels[figurePos[i][0]][figurePos[i][1]] = 1;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function randomInteger(min, max) {\r\n");
      out.write("            let rand = min + Math.random() * (max + 1 - min);\r\n");
      out.write("            return Math.floor(rand);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function cleanLine(){\r\n");
      out.write("            let counter = 0;\r\n");
      out.write("            for(let i = 2; i < heightInPixel; i++){\r\n");
      out.write("                for(let j = 1; j < widthInPixel; j++){\r\n");
      out.write("                    if(arrayOfPixels[i][j] == 1){\r\n");
      out.write("                        counter++;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                if(counter > 10){\r\n");
      out.write("                    for(let x = i; x > 2; x--){\r\n");
      out.write("                        for(let y = 1; y < widthInPixel; y++){\r\n");
      out.write("                            arrayOfPixels[x][y] = arrayOfPixels[x-1][y];\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    score++;\r\n");
      out.write("                    if(gameSpeed > 30){\r\n");
      out.write("                        gameSpeed -= 2;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                counter = 0;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function stopGame(){\r\n");
      out.write("            for(let i = 1; i < widthInPixel-1; i++){\r\n");
      out.write("                if(arrayOfPixels[1][i] == 1){\r\n");
      out.write("                    playing = false;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        figure[0] = randomInteger(1, 7);\r\n");
      out.write("        figure[1] = 0;\r\n");
      out.write("        putInArray(figure[0]);\r\n");
      out.write("        leaderBoard();\r\n");
      out.write("        function game(){\r\n");
      out.write("            fps++;\r\n");
      out.write("            drawGame();\r\n");
      out.write("            raf = requestAnimationFrame(game);\r\n");
      out.write("            if(move && movingCheck('down')){\r\n");
      out.write("                if(++fps > gameSpeed){\r\n");
      out.write("                    moveDown();\r\n");
      out.write("                    fps = 0;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            else{\r\n");
      out.write("                cancelAnimationFrame(raf);\r\n");
      out.write("                saveState();\r\n");
      out.write("                cleanLine();\r\n");
      out.write("                stopGame();\r\n");
      out.write("                if(!playing){\r\n");
      out.write("                    drawGame();\r\n");
      out.write("                    result = prompt(\"Game over! Your score: \"+score+ \"! Please enter your name.\");\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                requestAnimationFrame(game);\r\n");
      out.write("                figure[0] = randomInteger(1, 7);\r\n");
      out.write("                figure[1] = 0;\r\n");
      out.write("                putInArray(figure[0]);\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        raf = requestAnimationFrame(game);\r\n");
      out.write("        \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
